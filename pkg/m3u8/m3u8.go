package m3u8

import (
	"errors"
	"io"
)

// GetURI returns uri generated by parsing m3u8.
func GetURI(input io.Reader) (string, error) {
	playlist, listType, err := DecodeFrom(input, true)
	if err != nil || listType != MASTER {
		return "", err
	}
	p := playlist.(*MasterPlaylist)

	if p == nil || len(p.Variants) != 1 || p.Variants[0] == nil {
		return "", errors.New("invalid m3u8 format")
	}
	return p.Variants[0].URI, nil
}

// GetChunklist returns a slice of uri string.
func GetChunklist(input io.Reader) ([]string, error) {
	playlist, listType, err := DecodeFrom(input, true)
	if err != nil || listType != MEDIA {
		return nil, err
	}
	p := playlist.(*MediaPlaylist)

	var chunklist []string
	for _, v := range p.Segments {
		if v != nil {
			chunklist = append(chunklist, v.URI)
		}
	}
	return chunklist, nil
}
